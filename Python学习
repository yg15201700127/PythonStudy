基础语法
一、行和缩进（单个制表符 或 两个空格 或 四个空格）
Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断，是用缩进来写模块。

二、多行语句 \
使用\分隔，语句中包含 [], {} 或 () 括号就不需要使用多行连接符。
allcount = one + \
           two + \
           three
months = ['Jan', 'Oct', 'Mar',
        'May', 'Dec']        
        
三、引号（单引号、双引号、三引号）
三引号可以由多行组成，特定未知用作注释
str = """三引号可以由多行组成，
特定未知用作注释"""

四、注释 
#、三个单引号(''')或三个双引号(""")

五、等待用户输入 
3.0后用input代替raw_input

六、print输出
print("i miss u", end='')  #i miss ui miss u
print("i miss u")

七、多个变量赋值
a = b = c = 1  三个变量被分配到相同的内存空间上
a, b, c = 1, 2, "hua" 

八、del语句
del语句删除单个或多个对象的引用
del var
del var_a, var_b 

九、截取字符串\列表\元组tuple    （list = [ 'runoob', 786 , 2.23, 'john', 70.2 ]）
变量 [头下标:尾下标]
str = 'imissu'
print(str[1:5])  #miss
print(str[2:])       # 输出从第三个字符开始的字符串
print(str * 2)      # 输出字符串两次 imissuimissu
print(str + "TEST")  # 输出连接的字符串 imissuTEST

十、元组tuple
用"()"标识。但是元组不能二次赋值，相当于只读列表。
tuple = ( 'hua', 5 , 1.23, 'fa', 30.11 )
tuple[2] = 1    # 元组中是非法应用,不允许重新赋值

十一、字典 （列表是有序的对象集合，字典是无序的对象集合）
字典当中的元素是通过键来存取的，而不是通过偏移存取。
字典用"{ }"标识。字典由索引(key)和它对应的值value组成。
dict = {'name': 'hua','age':1111, 'desc': 'sales'}

十二、位运算符
&	按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0	(a & b) 输出结果 12 ，二进制解释： 0000 1100
|	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。	(a | b) 输出结果 61 ，二进制解释： 0011 1101
^	按位异或运算符：当两对应的二进位相异时，结果为1 	(a ^ b) 输出结果 49 ，二进制解释： 0011 0001
~	按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1 。~x 类似于 -x-1	(~a ) 输出结果 -61 ，二进制解释： 1100 0011，在一个有符号二进制数的补码形式。
<<	左移动运算符：运算数的各二进位全部左移若干位，由 << 右边的数字指定了移动的位数，高位丢弃，低位补0。	a << 2 输出结果 240 ，二进制解释： 1111 0000
>>	右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，>> 右边的数字指定了移动的位数 	a >> 2 输出结果 15 ，二进制解释： 0000 1111

十三、条件语句
不支持switch语句 条件、else后需跟冒号
if 判断条件1:
    执行语句1……
elif 判断条件2:
    执行语句2……
elif 判断条件3:
    执行语句3……
else:
    执行语句4……
    
十四、循环语句
没有do...while...语句
1：while循环
  （1）while … else 在循环条件为 false 时执行 else 语句块
2：for循环
   (1) for … else else 中的语句会在循环正常执行完（即 for 不是通过 break 跳出而中断的)
3：嵌套循环
4：循环控制语句：break、continue、pass  pass是空语句，是为了保持程序结构的完整性。
当循环是由break语句中断时，else就不被执行

十五、数学函数
abs(x)	返回数字的绝对值，如abs(-10) 返回 10
ceil(x) 	返回数字的上入整数，如math.ceil(4.1) 返回 5
cmp(x, y)	如果 x < y 返回 -1, 如果 x == y 返回 0, 如果 x > y 返回 1
exp(x) 	返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045
fabs(x)	返回数字的绝对值，如math.fabs(-10) 返回10.0
floor(x) 	返回数字的下舍整数，如math.floor(4.9)返回 4
log(x) 	如math.log(math.e)返回1.0,math.log(100,10)返回2.0
log10(x) 	返回以10为基数的x的对数，如math.log10(100)返回 2.0
max(x1, x2,...) 	返回给定参数的最大值，参数可以为序列。
min(x1, x2,...) 	返回给定参数的最小值，参数可以为序列。
modf(x) 	返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。
pow(x, y)	x**y 运算后的值。
round(x [,n])	返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。
sqrt(x) 	返回数字x的平方根

十六、随机函数
choice(seq)	从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。
randrange ([start,] stop [,step]) 	从指定范围内，按指定基数递增的集合中获取一个随机数，基数缺省值为1
random() 	随机生成下一个实数，它在[0,1)范围内。
seed([x]) 	改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。
shuffle(lst) 	将序列的所有元素随机排序
uniform(x, y)	随机生成下一个实数，它在[x,y]范围内。

十七、三角函数
acos(x)	           返回x的反余弦弧度值。
asin(x)	           返回x的反正弦弧度值。
atan(x)	           返回x的反正切弧度值。
atan2(y, x)	返回给定的 X 及 Y 坐标值的反正切值。
cos(x)	           返回x的弧度的余弦值。
hypot(x, y)	返回欧几里德范数 sqrt(x*x + y*y)。
sin(x)	           返回的x弧度的正弦值。
tan(x)	           返回x弧度的正切值。
degrees(x)	           将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0
radians(x)	           将角度转换为弧

十八、数学常量
pi	数学常量 pi（圆周率，一般以π来表示）
e	数学常量 e，e即自然常数（自然常数）

十九、字符串格式化
      %c	 格式化字符及其ASCII码
      %s	 格式化字符串
      %d	 格式化整数
      %u	 格式化无符号整型
      %o	 格式化无符号八进制数
      %x	 格式化无符号十六进制数
      %X	 格式化无符号十六进制数（大写）
      %f	 格式化浮点数字，可指定小数点后的精度
      %e	 用科学计数法格式化浮点数
      %E	 作用同%e，用科学计数法格式化浮点数
      %g	 %f和%e的简写
      %G	 %f 和 %E 的简写
      %p	 用十六进制数格式化变量的地址

二十、函数
def functionname( parameters ):
   "函数_文档字符串"
   function_suite
   return [expression]
   
def printme( str ):
   print str
   return   
   
  不定长参数：def functionname([formal_args,] *var_args_tuple ):  #*号
  
 二十三、函数调用全局变量
 Money = 2
def AddMoney():
    global Money # 全局global
    Money = Money + 1
print(Money)
AddMoney()
print(Money)
